{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, createReviewReducer, lastProductReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  createReview: createReviewReducer,\n  lastProducts: lastProductReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  deleteUser: userDeleteReducer,\n  userUpdate: userUpdateReducer\n});\nconst cartItemsStorage = localStorage.getItem(`cartItems`) ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsStorage,\n    shippingAddress: shippingAddressStorage\n  },\n  userLogin: {\n    userInfo: userInfoStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","createReviewReducer","lastProductReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetails","productCreate","productUpdate","productDelete","createReview","lastProducts","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","deleteUser","userUpdate","cartItemsStorage","localStorage","getItem","JSON","parse","userInfoStorage","shippingAddressStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/home/kaliuser/Documents/portfolio/commercial_apps/django-ecommerce/ecommerce-django-react/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, createReviewReducer, lastProductReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer, } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productDelete: productDeleteReducer,\n    createReview: createReviewReducer,\n    lastProducts: lastProductReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    deleteUser: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n})\n\nconst cartItemsStorage = localStorage.getItem(`cartItems`) ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: { cartItems: cartItemsStorage, shippingAddress: shippingAddressStorage },\n    userLogin: { userInfo: userInfoStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,kBAAkB,QAAQ,4BAA4B;AACjM,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AACpL,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,eAAe,QAAS,0BAA0B;AAE/J,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC5B0B,WAAW,EAAEtB,kBAAkB;EAC/BuB,cAAc,EAAEtB,qBAAqB;EACrCuB,aAAa,EAAErB,oBAAoB;EACnCsB,aAAa,EAAErB,oBAAoB;EACnCsB,aAAa,EAAExB,oBAAoB;EACnCyB,YAAY,EAAEtB,mBAAmB;EACjCuB,YAAY,EAAEtB,kBAAkB;EAEhCuB,IAAI,EAAEtB,WAAW;EACjBuB,SAAS,EAAEtB,gBAAgB;EAC3BuB,YAAY,EAAEtB,mBAAmB;EACjCuB,WAAW,EAAEtB,kBAAkB;EAC/BuB,iBAAiB,EAAEtB,wBAAwB;EAC3CuB,QAAQ,EAAEtB,eAAe;EACzBuB,WAAW,EAAEpB,kBAAkB;EAC/BqB,YAAY,EAAEnB,mBAAmB;EACjCoB,QAAQ,EAAEjB,eAAe;EACzBkB,YAAY,EAAEtB,mBAAmB;EACjCuB,WAAW,EAAErB,kBAAkB;EAC/BsB,SAAS,EAAErB,gBAAgB;EAC3BsB,UAAU,EAAE5B,iBAAiB;EAC7B6B,UAAU,EAAE5B;AAEhB,CAAC,CAAC;AAEF,MAAM6B,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAE,WAAU,CAAC,GACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEtD,MAAMG,eAAe,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACpDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,sBAAsB,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAClEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAE5D,MAAMK,YAAY,GAAG;EACjBrB,IAAI,EAAE;IAAEsB,SAAS,EAAER,gBAAgB;IAAES,eAAe,EAAEH;EAAuB,CAAC;EAC9EnB,SAAS,EAAE;IAAEuB,QAAQ,EAAEL;EAAgB;AAC3C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACxD,KAAK,CAAC;AAE1B,MAAMyD,KAAK,GAAG5D,WAAW,CAAC0B,OAAO,EAAE6B,YAAY,EAC3CnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAU,CAAC,CAAC,CAAC;AAExD,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}