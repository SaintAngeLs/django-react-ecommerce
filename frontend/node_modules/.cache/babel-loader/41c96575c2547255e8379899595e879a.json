{"ast":null,"code":"import _slicedToArray from\"/home/kaliuser/Documents/portfolio/commercial_apps/django-ecommerce/ecommerce-django-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];if(!shippingAddress.address){history.push('/shipping');}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\"},\"Select Method\"),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Check,{label:\"PayPal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}))),/*#__PURE__*/React.createElement(Button,{type:\"submit\",className:\"rounded\"},\"Continue\")));}export default PaymentScreen;","map":{"version":3,"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","_ref","history","cart","state","shippingAddress","dispatch","_useState","_useState2","_slicedToArray","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","createElement","step1","step2","step3","onSubmit","Group","Label","as","Check","label","id","name","checked","onChange","target","value","type","className"],"sources":["/home/kaliuser/Documents/portfolio/commercial_apps/django-ecommerce/ecommerce-django-react/frontend/src/screens/PaymentScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({history}) {\n    const cart = useSelector(state => state.cart) \n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address){\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3/>\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n\n                    <Col>\n                        <Form.Check\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' className='rounded'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen;\n"],"mappings":"0NAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,MAAM,CAAEC,GAAG,KAAQ,iBAAiB,CACnD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,OAASC,iBAAiB,KAAQ,wBAAwB,CAE1D,QAAS,CAAAC,aAAaA,CAAAC,IAAA,CAAY,IAAV,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAC3B,GAAM,CAAAC,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAI,CAAAA,KAAK,CAACD,IAAI,GAAC,CAC7C,GAAQ,CAAAE,eAAe,CAAKF,IAAI,CAAxBE,eAAe,CAEvB,GAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,IAAAY,SAAA,CAA0ChB,QAAQ,CAAC,QAAQ,CAAC,CAAAiB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArDG,aAAa,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IAEtC,GAAI,CAACH,eAAe,CAACO,OAAO,CAAC,CACzBV,OAAO,CAACW,IAAI,CAAC,WAAW,CAAC,CAC7B,CAEA,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,CAAC,CAAK,CACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBV,QAAQ,CAACP,iBAAiB,CAACW,aAAa,CAAC,CAAC,CAC1CR,OAAO,CAACW,IAAI,CAAC,aAAa,CAAC,CAC/B,CAAC,CAED,mBACIvB,KAAA,CAAA2B,aAAA,CAACpB,aAAa,mBACVP,KAAA,CAAA2B,aAAA,CAACnB,aAAa,EAACoB,KAAK,MAACC,KAAK,MAACC,KAAK,MAAC,CAAC,cAElC9B,KAAA,CAAA2B,aAAA,CAACzB,IAAI,EAAC6B,QAAQ,CAAEP,aAAc,eAC1BxB,KAAA,CAAA2B,aAAA,CAACzB,IAAI,CAAC8B,KAAK,mBACPhC,KAAA,CAAA2B,aAAA,CAACzB,IAAI,CAAC+B,KAAK,EAACC,EAAE,CAAC,QAAQ,EAAC,eAAyB,CAAC,cAElDlC,KAAA,CAAA2B,aAAA,CAACvB,GAAG,mBACAJ,KAAA,CAAA2B,aAAA,CAACzB,IAAI,CAACiC,KAAK,EACPC,KAAK,CAAC,uBAAuB,CAC7BC,EAAE,CAAC,QAAQ,CACXC,IAAI,CAAC,eAAe,CACpBC,OAAO,MACPC,QAAQ,CAAE,SAAAA,SAACf,CAAC,QAAK,CAAAJ,gBAAgB,CAACI,CAAC,CAACgB,MAAM,CAACC,KAAK,CAAC,EAAC,CAG1C,CACX,CACG,CAAC,cAEb1C,KAAA,CAAA2B,aAAA,CAACxB,MAAM,EAACwC,IAAI,CAAC,QAAQ,CAACC,SAAS,CAAC,SAAS,EAAC,UAElC,CACN,CACK,CAAC,CAExB,CAEA,cAAe,CAAAlC,aAAa"},"metadata":{},"sourceType":"module"}